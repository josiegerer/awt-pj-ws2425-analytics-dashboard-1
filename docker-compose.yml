version: '3.8'

services:
  postgresdb:
    image: postgres
    ports:
      - ${DATABASE_OUTSIDE_PORT}:${DATABASE_INSIDE_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      retries: 5
      start_period: 3s
      timeout: 5s
    container_name: postgresdb

  djangoapp:
    container_name: analytic_dashboard_djangoapp
    build:
      context: ${PWD}/analyticDashboardDjangoApp
      dockerfile: Dockerfile
      target: dev
      args:
        PATH_WEBCENTRAL_SRC: ${PWD}
        DJANGO_UNPRIVILEGED_USER: ${DJANGO_UNPRIVILEGED_USER}
    ports:
      - ${DJANGO_OUTSIDE_PORT}:${DJANGO_INSIDE_PORT}
    depends_on:
      postgresdb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - TZ=Europe/Berlin
      - DJANGO_LISTEN_PORT=${DJANGO_INSIDE_PORT}
    volumes:
      - ${PWD}/analyticDashboardDjangoApp:/analyticDashboardDjangoApp  
    command: >
      bash -c "python3 /analyticDashboardDjangoApp/manage.py runserver 0.0.0.0:${DJANGO_INSIDE_PORT}"
  #Adding Frontend service
volumes:
  pgdata:
  node_modules:
