{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"heatmap-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"Active Hours\", -1 /* HOISTED */)), _createVNode(_component_apexchart, {\n    type: \"heatmap\",\n    options: $data.chartOptions,\n    series: $data.chartData,\n    height: \"350\"\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_apexchart","type","options","$data","chartOptions","series","chartData","height"],"sources":["/Users/omar/awt-pj-ws2425-analytics-dashboard-1/frontend/src/components/ActiveHours.vue"],"sourcesContent":["<template>\n  <div class=\"heatmap-container\">\n    <h3>Active Hours</h3>\n    <apexchart \n      type=\"heatmap\" \n      :options=\"chartOptions\" \n      :series=\"chartData\" \n      height=\"350\" \n    />\n  </div>\n</template>\n\n<script>\nimport VueApexCharts from \"vue3-apexcharts\";\n\nexport default {\n  name: \"HeatmapChart\",\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      chartData: [\n        { name: \"0:00-4:00\", data: this.generateData(7, { min: 0, max: 240 }) },\n        { name: \"4:00-8:00\", data: this.generateData(7, { min: 0, max: 240 }) },\n        { name: \"8:00-12:00\", data: this.generateData(7, { min: 0, max: 240 }) },\n        { name: \"12:00-16:00\", data: this.generateData(7, { min: 0, max: 240 }) },\n        { name: \"16:00-20:00\", data: this.generateData(7, { min: 0, max: 240 }) },\n        { name: \"20:00-24:00\", data: this.generateData(7, { min: 0, max: 240 }) },\n      ],\n      chartOptions: {\n        chart: {\n          height: 350,\n          type: \"heatmap\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        plotOptions: {\n          heatmap: {\n            colorScale: {\n              ranges: [\n                { from: 0, to: 60, color: '#F8C373', name: '0-1 hour' },\n                { from: 61, to: 120, color: '#FF6C00', name: '1-2 hours' },\n                { from: 121, to: 180, color: '#C40D1E', name: '2-3 hours' },\n                { from: 181, to: 240, color: '#76020C', name: '3-4 hours' },\n              ],\n            },\n          },\n        },\n        xaxis: {\n            categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n            position: 'top', // Keep labels at the top\n            labels: {\n              style: {\n                align: 'bottom', // Align text to the left\n                colors: '#000', // Optional: Text color\n                fontSize: '12px', // Optional: Font size\n              },\n            },\n          },\n        yaxis: {\n          categories: ['0:00-4:00', '4:00-8:00', '8:00-12:00', '12:00-16:00', '16:00-20:00', '20:00-24:00'], // Ascending order\n          title: {\n            text: \"Time of Day\", // Label for the Y-axis\n          },\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return `${val} minutes`; // Tooltip format\n            },\n          },\n        },\n        legend: {\n          show: true,\n          position: 'bottom',\n          horizontalAlign: 'center',\n          labels: {\n            colors: '#000',\n          },\n          markers: {\n            size: 8, // Show individual markers\n          },\n        },\n      },\n    };\n  },\n  methods: {\n    generateData(count, { min, max }) {\n      let data = [];\n      for (let i = 0; i < count; i++) {\n        data.push(Math.floor(Math.random() * (max - min + 1)) + min);\n      }\n      return data;\n    },\n  },\n};\n</script>\n\n<style scoped>\nh3 {\n  text-align: left; /* Align title to the left */\n  font-size: 15px;\n  color: black;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;;uBAA9BC,mBAAA,CAQM,OARNC,UAQM,G,0BAPJC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBC,YAAA,CAKEC,oBAAA;IAJAC,IAAI,EAAC,SAAS;IACbC,OAAO,EAAEC,KAAA,CAAAC,YAAY;IACrBC,MAAM,EAAEF,KAAA,CAAAG,SAAS;IAClBC,MAAM,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}