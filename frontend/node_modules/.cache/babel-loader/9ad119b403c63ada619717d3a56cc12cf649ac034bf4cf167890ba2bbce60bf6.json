{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Import jwt-decode correctly\nimport jwt_decode from 'jwt-decode';\nconsole.log('jwtDecode:', jwt_decode); // Debug: Check if jwtDecode is imported\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      userName: 'User',\n      // Default name\n      role: '' // User role\n    };\n  },\n  computed: {\n    showHeader() {\n      return this.$route.path !== '/educator-dashboard';\n    }\n  },\n  methods: {\n    navigateTo(route) {\n      this.$router.push(route);\n    },\n    fetchUserName() {\n      const token = localStorage.getItem('token'); // Get the token\n      console.log('Token:', token); // Debug: Check if token exists\n\n      if (token) {\n        try {\n          console.log('jwtDecode:', jwtDecode); // Debug: Check if jwtDecode is imported\n          const decodedToken = jwt_decode(token); // Decode the token\n          console.log('Decoded Token:', decodedToken); // Debug: Check decoded token\n\n          this.userName = decodedToken.name; // Set the user's name\n          this.role = decodedToken.role; // Set the user's role\n\n          // Redirect based on role\n          const roleRoutes = {\n            learner: '/overall',\n            admin: '/admin-dashboard',\n            educator: '/educator-dashboard'\n          };\n          const route = roleRoutes[this.role];\n          console.log('User Role:', this.role); // Debug: Check the role\n          console.log('Redirecting to:', route); // Debug: Check the route\n\n          if (route && this.$route.path !== route) {\n            this.$router.push(route); // Redirect to the role-specific route\n          }\n        } catch (error) {\n          console.error('Invalid token:', error);\n          this.$router.push('/login'); // Redirect to login if the token is invalid\n        }\n      } else {\n        console.error('No token found');\n        this.$router.push('/login'); // Redirect to login if no token is found\n      }\n    }\n  },\n  created() {\n    this.fetchUserName();\n  }\n};","map":{"version":3,"names":["jwt_decode","console","log","name","data","userName","role","computed","showHeader","$route","path","methods","navigateTo","route","$router","push","fetchUserName","token","localStorage","getItem","jwtDecode","decodedToken","roleRoutes","learner","admin","educator","error","created"],"sources":["/Users/omar/awt-pj-ws2425-analytics-dashboard-1/frontend/src/App.vue"],"sourcesContent":["<template>\n<div class=\"app-container\">\n  <!-- Conditional Header -->\n  <header class=\"dashboard-header\">\n    <div class=\"logo-greeting\">\n      <div class=\"logo\">\n        <img src=\"@/assets/lms-Logo.png\" alt=\"LMS Logo\" />\n      </div>\n      <div class=\"greeting\">\n        <h1>Welcome, {{ userName }}</h1>\n        <p v-if=\"showHeader\">Glad to see you again, ready for another session?</p>\n        <p v-else>Great to have you back, ready to inspire and guide the next generation?</p>\n      </div>\n    </div>\n    <nav v-if=\"showHeader\" class=\"nav-buttons\">\n      <button @click=\"navigateTo('/overall')\">Overall</button>\n      <button @click=\"navigateTo('/performance')\">Performance</button>\n      <button @click=\"navigateTo('/engagement')\">Engagement</button>\n      <button @click=\"navigateTo('/admin-dashboard')\">Admin</button>\n      <button @click=\"navigateTo('/educator-dashboard')\">Educator</button>\n    </nav>\n  </header>\n\n  <!-- Dynamic Content -->\n  <main class=\"main-content\">\n    <router-view />\n  </main>\n</div>\n</template>\n\n<script>\n// Import jwt-decode correctly\nimport jwt_decode from 'jwt-decode';\nconsole.log('jwtDecode:', jwt_decode); // Debug: Check if jwtDecode is imported\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      userName: 'User', // Default name\n      role: '', // User role\n    };\n  },\n  computed: {\n    showHeader() {\n      return this.$route.path !== '/educator-dashboard';\n    }\n  },\n  methods: {\n    navigateTo(route) {\n      this.$router.push(route);\n    },\n    fetchUserName() {\n      const token = localStorage.getItem('token'); // Get the token\n      console.log('Token:', token); // Debug: Check if token exists\n\n      if (token) {\n        try {\n          console.log('jwtDecode:', jwtDecode); // Debug: Check if jwtDecode is imported\n          const decodedToken = jwt_decode(token); // Decode the token\n          console.log('Decoded Token:', decodedToken); // Debug: Check decoded token\n\n          this.userName = decodedToken.name; // Set the user's name\n          this.role = decodedToken.role; // Set the user's role\n\n          // Redirect based on role\n          const roleRoutes = {\n            learner: '/overall',\n            admin: '/admin-dashboard',\n            educator: '/educator-dashboard',\n          };\n          const route = roleRoutes[this.role];\n          console.log('User Role:', this.role); // Debug: Check the role\n          console.log('Redirecting to:', route); // Debug: Check the route\n\n          if (route && this.$route.path !== route) {\n            this.$router.push(route); // Redirect to the role-specific route\n          }\n        } catch (error) {\n          console.error('Invalid token:', error);\n          this.$router.push('/login'); // Redirect to login if the token is invalid\n        }\n      } else {\n        console.error('No token found');\n        this.$router.push('/login'); // Redirect to login if no token is found\n      }\n    },\n  },\n  created() {\n    this.fetchUserName();\n  },\n};\n</script>\n\n<style>\n/* Reset */\n* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n\n/* Font Family */\nbody {\nfont-family: 'Inter', sans-serif;\n}\n\n/* App Container */\n.app-container {\ndisplay: flex;\nflex-direction: column;\nheight: 100vh;\nwidth: 100%;\noverflow: hidden;\n}\n\n/* Header Styling */\n.dashboard-header {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nbackground-color: #c40d1e; /* Red Background - TU Color */\nheight: 100px; /* Fixed height */\npadding: 0 20px;\ncolor: white;\n}\n\n.logo-greeting {\ndisplay: flex;\nalign-items: center;\n}\n\n.greeting {\ntext-align: left;\nmargin-left: 10px; /* Minimal space between logo and greeting */\n}\n\n.greeting h1 {\nmargin: 0;\nfont-size: 24px;\n}\n\n.greeting p {\nmargin: 0;\nfont-size: 14px;\n}\n\n/* Navigation Buttons */\n.nav-buttons {\ndisplay: flex;\ngap: 20px;\nmargin-left: auto; /* Align buttons to the right */\n}\n\n/* Logo Styling */\n.logo {\nmargin-right: 10px; /* Minimal space between logo and greeting */\n}\n\n.logo img {\nheight: 40px; /* Adjust the height as needed */\n}\n\n/* Button Styling */\nbutton {\npadding: 20px 40px; /* Bigger inner padding */\nborder: 2px solid white; /* Hollow buttons with white border */\nborder-radius: 0; /* No rounded edges */\nbackground-color: transparent; /* Transparent background */\ncolor: white; /* White text */\nfont-size: 18px; /* Bigger font size */\nfont-family: 'Inter', sans-serif;\ncursor: pointer;\ntransition: background-color 0.3s, transform 0.3s;\n}\n\nbutton:hover {\nbackground-color: rgba(255, 255, 255, 0.1); /* Light white on hover */\ntransform: scale(1.05);\n}\n\nbutton:active {\nbackground-color: rgba(255, 255, 255, 0.2); /* Slightly darker on click */\ntransform: scale(1);\n}\n\n/* Main Content */\n.main-content {\nheight: calc(100vh - 100px); /* Viewport height minus header height */\noverflow-y: auto;\npadding: 20px;\nbackground-color: #f5f5f5;\n}\n</style>\n\n<!-- Add this in the <head> of your index.html -->\n<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap\" rel=\"stylesheet\">"],"mappings":";AA+BA;AACA,OAAOA,UAAS,MAAO,YAAY;AACnCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,UAAU,CAAC,EAAE;;AAEvC,eAAe;EACbG,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,MAAM;MAAE;MAClBC,IAAI,EAAE,EAAE,CAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,IAAG,KAAM,qBAAqB;IACnD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;IAC1B,CAAC;IACDG,aAAaA,CAAA,EAAG;MACd,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAC7ClB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEe,KAAK,CAAC,EAAE;;MAE9B,IAAIA,KAAK,EAAE;QACT,IAAI;UACFhB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEkB,SAAS,CAAC,EAAE;UACtC,MAAMC,YAAW,GAAIrB,UAAU,CAACiB,KAAK,CAAC,EAAE;UACxChB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEmB,YAAY,CAAC,EAAE;;UAE7C,IAAI,CAAChB,QAAO,GAAIgB,YAAY,CAAClB,IAAI,EAAE;UACnC,IAAI,CAACG,IAAG,GAAIe,YAAY,CAACf,IAAI,EAAE;;UAE/B;UACA,MAAMgB,UAAS,GAAI;YACjBC,OAAO,EAAE,UAAU;YACnBC,KAAK,EAAE,kBAAkB;YACzBC,QAAQ,EAAE;UACZ,CAAC;UACD,MAAMZ,KAAI,GAAIS,UAAU,CAAC,IAAI,CAAChB,IAAI,CAAC;UACnCL,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACI,IAAI,CAAC,EAAE;UACtCL,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEW,KAAK,CAAC,EAAE;;UAEvC,IAAIA,KAAI,IAAK,IAAI,CAACJ,MAAM,CAACC,IAAG,KAAMG,KAAK,EAAE;YACvC,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC,EAAE;UAC5B;QACF,EAAE,OAAOa,KAAK,EAAE;UACdzB,OAAO,CAACyB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;UACtC,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;QAC/B;MACF,OAAO;QACLd,OAAO,CAACyB,KAAK,CAAC,gBAAgB,CAAC;QAC/B,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAC/B;IACF;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACX,aAAa,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}