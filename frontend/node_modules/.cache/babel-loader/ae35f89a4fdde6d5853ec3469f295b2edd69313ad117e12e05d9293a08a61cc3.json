{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport VueApexCharts from \"vue3-apexcharts\";\nexport default {\n  name: \"TimeSpent\",\n  components: {\n    apexchart: VueApexCharts\n  },\n  props: {\n    data: {\n      type: Array,\n      required: true,\n      default: () => [{\n        activity: \"Activity 1\",\n        current: 120,\n        previous: 100\n      }, {\n        activity: \"Activity 2\",\n        current: 90,\n        previous: 80\n      }, {\n        activity: \"Activity 3\",\n        current: 60,\n        previous: 70\n      }, {\n        activity: \"Activity 4\",\n        current: 150,\n        previous: 140\n      }, {\n        activity: \"Activity 5\",\n        current: 200,\n        previous: 180\n      }]\n    }\n  },\n  data() {\n    return {\n      showTable: false\n    };\n  },\n  computed: {\n    chartData() {\n      return [{\n        name: 'Current Week',\n        data: this.data.map(item => item.current)\n      }, {\n        name: 'Previous Week',\n        data: this.data.map(item => item.previous)\n      }];\n    },\n    chartOptions() {\n      return {\n        chart: {\n          type: 'bar',\n          height: 350\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: this.data.map(item => item.activity)\n        },\n        yaxis: {\n          title: {\n            text: 'Minutes'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return `${val} minutes`;\n            }\n          }\n        },\n        colors: ['lightgrey', 'grey']\n      };\n    }\n  },\n  methods: {\n    toggleTable() {\n      this.showTable = !this.showTable;\n      this.$emit('button-click');\n    },\n    getComparison(item) {\n      const percentage = (item.current - item.previous) / item.previous * 100;\n      return `${percentage.toFixed(2)}%`;\n    },\n    getComparisonClass(item) {\n      return (item.current - item.previous) / item.previous * 100 >= 0 ? 'positive' : 'negative';\n    }\n  }\n};","map":{"version":3,"names":["VueApexCharts","name","components","apexchart","props","data","type","Array","required","default","activity","current","previous","showTable","computed","chartData","map","item","chartOptions","chart","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","methods","toggleTable","$emit","getComparison","percentage","toFixed","getComparisonClass"],"sources":["/Users/omar/awt-pj-ws2425-analytics-dashboard-1/frontend/src/components/TimeSpent.vue"],"sourcesContent":["<template>\n  <div class=\"time-spent-container\">\n    <h3>Time Spent on Activities</h3>\n    <p>in Minutes</p>\n    <apexchart \n      type=\"bar\" \n      :options=\"chartOptions\" \n      :series=\"chartData\" \n      height=\"350\" \n    />\n    <button @click.prevent=\"toggleTable\" class=\"view-more-button\">\n      {{ showTable ? 'View Less' : 'View More' }}\n    </button>\n    <table v-if=\"showTable\" class=\"time-spent-table\">\n      <thead>\n        <tr>\n          <th>Activity</th>\n          <th>Time Spent (minutes)</th>\n          <th>Compared to Last Week (%)</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in data\" :key=\"item.activity\">\n          <td>{{ item.activity }}</td>\n          <td>{{ item.current }}</td>\n          <td :class=\"getComparisonClass(item)\">\n            {{ getComparison(item) }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport VueApexCharts from \"vue3-apexcharts\";\n\nexport default {\n  name: \"TimeSpent\",\n  components: {\n    apexchart: VueApexCharts\n  },\n  props: {\n    data: {\n      type: Array,\n      required: true,\n      default: () => [\n        { activity: \"Activity 1\", current: 120, previous: 100 },\n        { activity: \"Activity 2\", current: 90, previous: 80 },\n        { activity: \"Activity 3\", current: 60, previous: 70 },\n        { activity: \"Activity 4\", current: 150, previous: 140 },\n        { activity: \"Activity 5\", current: 200, previous: 180 },\n      ],\n    },\n  },\n  data() {\n    return {\n      showTable: false,\n    };\n  },\n  computed: {\n    chartData() {\n      return [\n        {\n          name: 'Current Week',\n          data: this.data.map(item => item.current)\n        },\n        {\n          name: 'Previous Week',\n          data: this.data.map(item => item.previous)\n        }\n      ];\n    },\n    chartOptions() {\n      return {\n        chart: {\n          type: 'bar',\n          height: 350,\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          },\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: this.data.map(item => item.activity),\n        },\n        yaxis: {\n          title: {\n            text: 'Minutes'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return `${val} minutes`;\n            }\n          }\n        },\n        colors: ['lightgrey', 'grey'], \n      };\n    }\n  },\n  methods: {\n    toggleTable() {\n      this.showTable = !this.showTable;\n      this.$emit('button-click');\n    },\n    getComparison(item) {\n      const percentage = ((item.current - item.previous) / item.previous) * 100;\n      return `${percentage.toFixed(2)}%`;\n    },\n    getComparisonClass(item) {\n      return ((item.current - item.previous) / item.previous) * 100 >= 0 ? 'positive' : 'negative';\n    }\n  }\n}\n</script>\n\n<style scoped>\n\nh3 {\n  text-align: left; \n  font-size: 15px;\n  color: black;\n}\n\np{\n  font-size: 12px;\n}\n\n.view-more-button {\n  position: relative;\n  top: 10px;\n  right: 10px;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 4px;\n  background-color: rgb(255, 255, 255);\n  color: rgb(189, 186, 186);\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-size: 14px;\n}\n\n.view-more-button:hover {\n  background-color: rgb(253, 252, 252);\n}\n\n.time-spent-table {\n  margin-top: 20px;\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.time-spent-table th, .time-spent-table td {\n  border: 1px solid #ccc;\n  padding: 10px;\n  text-align: left;\n}\n\n.time-spent-table th {\n  background-color: #f5f5f5;\n}\n\n.positive {\n  color: #49cb40;\n}\n\n.negative {\n  color: #c40d1e;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}