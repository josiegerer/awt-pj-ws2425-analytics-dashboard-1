{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"course-completion-container\"\n};\nconst _hoisted_2 = {\n  class: \"course-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_5 = {\n  class: \"toggle-button\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"subcourse-list\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_9 = {\n  class: \"toggle-button\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"assessment-list\"\n};\nconst _hoisted_11 = {\n  class: \"assessment-details\"\n};\nconst _hoisted_12 = {\n  class: \"progress-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Course Completion\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.localCourses, course => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: course.id\n    }, [_createElementVNode(\"div\", {\n      onClick: $event => $options.toggleCourse(course.id),\n      class: \"course-header\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(course.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n      class: \"progress\",\n      style: _normalizeStyle({\n        width: course.progress + '%'\n      })\n    }, null, 4 /* STYLE */)]), _createElementVNode(\"span\", null, _toDisplayString(course.completedStudents) + \" / \" + _toDisplayString(course.totalStudents) + \" students (\" + _toDisplayString(course.progress) + \"%) \", 1 /* TEXT */), _createElementVNode(\"button\", _hoisted_5, _toDisplayString(course.open ? '▼' : '▶'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3), course.open ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(course.subcourses, subcourse => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: subcourse.id\n      }, [_createElementVNode(\"div\", {\n        onClick: $event => $options.toggleSubcourse(course.id, subcourse.id),\n        class: \"subcourse-header\"\n      }, [_createElementVNode(\"span\", null, _toDisplayString(subcourse.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n        class: \"progress\",\n        style: _normalizeStyle({\n          width: subcourse.progress + '%'\n        })\n      }, null, 4 /* STYLE */)]), _createElementVNode(\"span\", null, _toDisplayString(subcourse.completedStudents) + \" / \" + _toDisplayString(subcourse.totalStudents) + \" students (\" + _toDisplayString(subcourse.progress) + \"%) \", 1 /* TEXT */), _createElementVNode(\"button\", _hoisted_9, _toDisplayString(subcourse.open ? '▼' : '▶'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_7), subcourse.open ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(subcourse.assessments, assessment => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: assessment.id\n        }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", null, _toDisplayString(assessment.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", {\n          class: \"progress\",\n          style: _normalizeStyle({\n            width: assessment.passRate + '%'\n          })\n        }, null, 4 /* STYLE */)]), _createElementVNode(\"span\", null, _toDisplayString(assessment.passedStudents) + \" / \" + _toDisplayString(assessment.totalStudents) + \" students (\" + _toDisplayString(assessment.passRate) + \"%) \", 1 /* TEXT */)])]);\n      }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _cache[0] || (_cache[0] = _createElementVNode(\"hr\", {\n      class: \"divider\"\n    }, null, -1 /* HOISTED */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","localCourses","course","id","onClick","$event","$options","toggleCourse","_toDisplayString","name","_hoisted_4","style","_normalizeStyle","width","progress","completedStudents","totalStudents","_hoisted_5","open","_hoisted_3","_hoisted_6","subcourses","subcourse","toggleSubcourse","_hoisted_8","_hoisted_9","_hoisted_7","_hoisted_10","assessments","assessment","_hoisted_11","_hoisted_12","passRate","passedStudents","_createCommentVNode"],"sources":["/Users/omar/awt-pj-ws2425-analytics-dashboard-1/frontend/src/components/educator/CourseCompletion.vue"],"sourcesContent":["<template>\n    <div class=\"course-completion-container\">\n      <h3>Course Completion</h3>\n      <ul class=\"course-list\">\n        <li v-for=\"course in localCourses\" :key=\"course.id\">\n          <div @click=\"toggleCourse(course.id)\" class=\"course-header\">\n            <span>{{ course.name }}</span>\n            <div class=\"progress-bar\">\n              <div class=\"progress\" :style=\"{ width: course.progress + '%' }\"></div>\n            </div>\n            <span>\n              {{ course.completedStudents }} / {{ course.totalStudents }} students \n              ({{ course.progress }}%)\n            </span>\n            <button class=\"toggle-button\">{{ course.open ? '▼' : '▶' }}</button>\n          </div>\n          <ul v-if=\"course.open\" class=\"subcourse-list\">\n            <li v-for=\"subcourse in course.subcourses\" :key=\"subcourse.id\">\n              <div @click=\"toggleSubcourse(course.id, subcourse.id)\" class=\"subcourse-header\">\n                <span>{{ subcourse.name }}</span>\n                <div class=\"progress-bar\">\n                  <div class=\"progress\" :style=\"{ width: subcourse.progress + '%' }\"></div>\n                </div>\n                <span>\n                  {{ subcourse.completedStudents }} / {{ subcourse.totalStudents }} students \n                  ({{ subcourse.progress }}%)\n                </span>\n                <button class=\"toggle-button\">{{ subcourse.open ? '▼' : '▶' }}</button>\n              </div>\n              <ul v-if=\"subcourse.open\" class=\"assessment-list\">\n                <li v-for=\"assessment in subcourse.assessments\" :key=\"assessment.id\">\n                  <div class=\"assessment-details\">\n                    <span>{{ assessment.name }}</span>\n                    <div class=\"progress-bar\">\n                      <div\n                        class=\"progress\"\n                        :style=\"{ width: assessment.passRate + '%' }\"\n                      ></div>\n                    </div>\n                    <span>\n                      {{ assessment.passedStudents }} / {{ assessment.totalStudents }} students \n                      ({{ assessment.passRate }}%)\n                    </span>\n                  </div>\n                </li>\n              </ul>\n            </li>\n          </ul>\n          <hr class=\"divider\" />\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"CourseCompletion\",\n    props: {\n      courses: {\n        type: Array,\n        required: true,\n        default: () => [],\n      },\n    },\n    data() {\n      return {\n        localCourses: this.courses.map(course => ({\n          ...course,\n          completedStudents: this.calculateCompletedStudents(course),\n          totalStudents: this.calculateTotalStudents(course),\n          progress: this.calculateCourseProgress(course),\n          subcourses: course.subcourses.map(subcourse => ({\n            ...subcourse,\n            completedStudents: this.calculateCompletedStudents(subcourse),\n            totalStudents: subcourse.totalStudents || course.totalStudents,\n            progress: this.calculateSubcourseProgress(subcourse),\n          })),\n        })),\n      };\n    },\n    methods: {\n      calculateCourseProgress(course) {\n        const totalStudents = this.calculateTotalStudents(course);\n        const completedStudents = this.calculateCompletedStudents(course);\n        return totalStudents > 0\n          ? Math.round((completedStudents / totalStudents) * 100)\n          : 0;\n      },\n      calculateSubcourseProgress(subcourse) {\n        const totalStudents = subcourse.totalStudents;\n        const completedStudents = subcourse.assessments.every(\n          assessment => assessment.passedStudents === assessment.totalStudents\n        )\n          ? totalStudents\n          : 0;\n        return totalStudents > 0\n          ? Math.round((completedStudents / totalStudents) * 100)\n          : 0;\n      },\n      calculateCompletedStudents(entity) {\n        if (entity.assessments) {\n          return entity.assessments.every(\n            assessment => assessment.passedStudents === assessment.totalStudents\n          )\n            ? entity.totalStudents\n            : 0;\n        }\n        if (entity.subcourses) {\n          return entity.subcourses.filter(subcourse =>\n            subcourse.assessments.every(\n              assessment => assessment.passedStudents === assessment.totalStudents\n            )\n          ).length;\n        }\n        return 0;\n      },\n      calculateTotalStudents(entity) {\n        if (entity.subcourses) {\n          return entity.subcourses.reduce(\n            (sum, subcourse) => sum + subcourse.totalStudents,\n            0\n          );\n        }\n        if (entity.assessments) {\n          return entity.assessments.reduce(\n            (sum, assessment) => sum + assessment.totalStudents,\n            0\n          );\n        }\n        return entity.totalStudents || 0;\n      },\n      toggleCourse(courseId) {\n        const course = this.localCourses.find(course => course.id === courseId);\n        course.open = !course.open;\n      },\n      toggleSubcourse(courseId, subcourseId) {\n        const course = this.localCourses.find(course => course.id === courseId);\n        const subcourse = course.subcourses.find(subcourse => subcourse.id === subcourseId);\n        subcourse.open = !subcourse.open;\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .course-completion-container {\n    margin-top: 20px;\n  }\n  \n  .course-header,\n  .subcourse-header,\n  .assessment-details {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n    padding: 10px;\n    margin-bottom: 5px;\n  }\n  \n  .progress-bar {\n    width: 50%;\n    background-color: #f5f5f5;\n    border-radius: 4px;\n    overflow: hidden;\n    margin: 0 10px;\n  }\n  \n  .progress {\n    height: 10px;\n    background-color: #4caf50; /* Green for pass rate */\n  }\n  \n  .assessment-list {\n    margin-left: 20px;\n  }\n  \n  .toggle-button {\n    background: none;\n    border: none;\n    cursor: pointer;\n    font-size: 16px;\n  }\n  \n  .course-list,\n  .subcourse-list,\n  .assessment-list {\n    list-style-type: none;\n    padding-left: 0;\n  }\n  \n  .subcourse-list {\n    margin-left: 20px;\n  }\n  \n  .divider {\n    border: 1px solid #ccc;\n    margin: 10px 0;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}