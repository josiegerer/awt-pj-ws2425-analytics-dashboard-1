{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"assessment-performance-chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LineChart = _resolveComponent(\"LineChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"Assessment Performance Over Time\", -1 /* HOISTED */)), _createVNode(_component_LineChart, {\n    data: $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_LineChart","data","$data","chartData","options","chartOptions"],"sources":["/Users/omar/awt-pj-ws2425-analytics-dashboard-1/frontend/src/components/AssessmentPerformanceChart.vue"],"sourcesContent":["<template>\n    <div class=\"assessment-performance-chart\">\n      <h3>Assessment Performance Over Time</h3>\n      <LineChart :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n  </template>\n  \n<script>\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineElement } from 'chart.js';\n\n// Registriere die Chart.js-Komponenten\nChartJS.register(Title, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineElement);\n\nexport default {\n  name: 'AssessmentPointsChart',\n  components: {\n    LineChart: Line\n  },\n  data() {\n    const now = new Date();\n    const currentDay = now.getDate(); // Aktueller Tag im Monat\n\n    // Definiere das maximale Datum, das angezeigt werden soll (z. B. nur bis zum 20. Tag)\n    const maxDays = Math.min(currentDay, 20); \n\n    // Erzeuge eine Liste der Tage 1 - maxDays\n    const dayLabels = Array.from({ length: maxDays }, (_, i) => i + 1);\n\n    // Beispielhafte Punktedaten für die Tage 1 - maxDays (dies könnte mit echten Daten ersetzt werden)\n    const randomData = dayLabels.map(() => Math.floor(Math.random() * 100)); \n\n    // Berechne den Durchschnittswert\n    const averageValue = randomData.reduce((acc, val) => acc + val, 0) / randomData.length;\n    const averageData = Array(maxDays).fill(averageValue); // Konstante Linie für den Durchschnitt\n\n    return {\n      chartData: {\n        labels: dayLabels, // X-Achse zeigt die Tage bis zum aktuellen Tag oder max 20 Tage\n        datasets: [\n          {\n            label: 'Punkte erreicht',\n            data: randomData, // Tageswerte\n            borderColor: '#42A5F5',\n            backgroundColor: 'rgba(66, 165, 245, 0.2)',\n            fill: true,\n            tension: 0.4\n          },\n          {\n            label: 'Durchschnitt',\n            data: averageData, // Durchschnittswerte für eine horizontale Linie\n            borderColor: 'red',\n            borderWidth: 2,\n            borderDash: [5, 5], // Gepunktete Linie für Durchschnitt\n            pointRadius: 0, // Keine Punkte für diese Linie\n            fill: false\n          }\n        ]\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: true,\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                return `Punkte: ${context.raw}`;\n              }\n            }\n          },\n          legend: {\n            display: true,\n            position: 'bottom',\n            labels: {\n              color: '#000',\n              font: { size: 12 }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Tage im Monat'\n            },\n            ticks: {\n              autoSkip: true, // Automatische Reduzierung der Labels, wenn zu viele vorhanden sind\n              maxTicksLimit: 10 // Maximal 10 Labels auf der Achse\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Assessment Punkte'\n            },\n            beginAtZero: true,\n            min: 0,\n            max: 100\n          }\n        }\n      }\n    };\n  }\n};\n</script>\n\n\n  <style scoped>\n  h3 {\n    text-align: left;\n    font-size: 15px;\n    color: black;\n    margin-bottom: 20px;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAA8B;;;uBAAzCC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJC,mBAAA,CAAyC,YAArC,kCAAgC,sBACpCC,YAAA,CAAuDC,oBAAA;IAA3CC,IAAI,EAAEC,KAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,KAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}