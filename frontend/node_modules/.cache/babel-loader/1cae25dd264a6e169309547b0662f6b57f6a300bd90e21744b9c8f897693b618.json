{"ast":null,"code":"import { defineComponent, onMounted, ref } from \"vue\";\nimport { Chart, registerables } from \"chart.js\";\nChart.register(...registerables);\nexport default defineComponent({\n  name: \"ScatterPlot\",\n  props: {\n    data: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const scatterChart = ref(null);\n    onMounted(() => {\n      const ctx = scatterChart.value?.getContext(\"2d\");\n      if (!ctx) {\n        console.error(\"Failed to get canvas context.\");\n        return;\n      }\n      new Chart(ctx, {\n        type: \"scatter\",\n        data: {\n          datasets: [{\n            label: \"Scatter Data\",\n            data: props.data,\n            backgroundColor: \"rgba(75, 192, 192, 1)\"\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: false\n            }\n          },\n          scales: {\n            x: {\n              type: \"linear\",\n              position: \"bottom\",\n              title: {\n                display: true,\n                text: \"Time Spent\",\n                font: {\n                  size: 12,\n                  weight: 'bold'\n                }\n              },\n              min: 0,\n              max: 120,\n              stepSize: 20\n            },\n            y: {\n              title: {\n                display: true,\n                text: \"Assessment Points\",\n                font: {\n                  size: 12,\n                  weight: 'bold'\n                }\n              },\n              min: 0,\n              max: 100,\n              stepSize: 20\n            }\n          },\n          legend: {\n            display: false\n          }\n        },\n        plugins: [{\n          id: \"backgroundImage\",\n          beforeDraw: chart => {\n            if (chart?.chartArea) {\n              const ctx = chart.ctx;\n              const {\n                top,\n                left,\n                width,\n                height\n              } = chart.chartArea;\n              const img = new Image();\n              img.src = require(\"@/assets/learning_effectiveness_background.png\");\n              img.onload = () => {\n                ctx.drawImage(img, left, top, width, height);\n              };\n            }\n          }\n        }]\n      });\n    });\n    return {\n      scatterChart\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","onMounted","ref","Chart","registerables","register","name","props","data","type","Array","required","setup","scatterChart","ctx","value","getContext","console","error","datasets","label","backgroundColor","options","plugins","legend","display","scales","x","position","title","text","font","size","weight","min","max","stepSize","y","id","beforeDraw","chart","chartArea","top","left","width","height","img","Image","src","require","onload","drawImage"],"sources":["/Users/omar/awt-pj-ws2425-analytics-dashboard-1/frontend/src/components/LearningEffectivenessChart.vue"],"sourcesContent":["<template>\n  <div style=\"width: 100%; height: 100%; display: flex; flex-direction: column; justify-content: space-between;\">\n    <div style=\"flex: 1;\">\n      <h3>Learning Effectiveness</h3>\n      <p>Assessment points vs. Additional Time Spent on Activity</p>\n      <canvas ref=\"scatterChart\" style=\"width: 100%; height: 100%;\"></canvas>\n    </div>\n    <!-- Manual Legend -->\n    <div class=\"manual-legend\" style=\"display: flex; justify-content: center; margin-top: 10px;\">\n      <div style=\"display: flex; align-items: center; margin-right: 20px;\">\n        <div style=\"width: 15px; height: 15px; background-color: orange; margin-right: 5px;\"></div>\n        <span class=\"legend-text\">Improvement Potential</span>\n      </div>\n      <div style=\"display: flex; align-items: center;\">\n        <div style=\"width: 15px; height: 15px; background-color: green; margin-right: 5px;\"></div>\n        <span class=\"legend-text\">Best Practice</span>\n      </div>\n    </div>\n  </div>\n</template>\n  \n  <script>\n  import { defineComponent, onMounted, ref } from \"vue\";\n  import { Chart, registerables } from \"chart.js\";\n  \n  Chart.register(...registerables);\n  \n  export default defineComponent({\n    name: \"ScatterPlot\",\n    props: {\n      data: {\n        type: Array,\n        required: true,\n      },\n    },\n    setup(props) {\n      const scatterChart = ref(null);\n  \n      onMounted(() => {\n        const ctx = scatterChart.value?.getContext(\"2d\");\n        if (!ctx) {\n          console.error(\"Failed to get canvas context.\");\n          return;\n        }\n  \n        new Chart(ctx, {\n          type: \"scatter\",\n          data: {\n            datasets: [\n              {\n                label: \"Scatter Data\",\n                data: props.data,\n                backgroundColor: \"rgba(75, 192, 192, 1)\",\n              },\n            ],\n          },\n          options: {\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n            scales: {\n            x: {\n              type: \"linear\",\n              position: \"bottom\",\n              title: {\n                display: true,\n                text: \"Time Spent\", \n                font: {\n                  size: 12,\n                  weight: 'bold',\n                },\n              },\n              min: 0,\n              max: 120,\n              stepSize: 20,\n            },\n            y: {\n              title: {\n                display: true,\n                text: \"Assessment Points\", \n                font: {\n                  size: 12,\n                  weight: 'bold',\n                },\n              },\n              min: 0,\n              max: 100,\n              stepSize: 20,\n            },\n          },\n          legend: {\n            display: false,\n          },\n          },\n          plugins: [\n            {\n              id: \"backgroundImage\",\n              beforeDraw: (chart) => {\n                if (chart?.chartArea) {\n                const ctx = chart.ctx;\n                const { top, left, width, height } = chart.chartArea;\n\n                const img = new Image();\n                img.src = require(\"@/assets/learning_effectiveness_background.png\");\n                img.onload = () => {\n                  ctx.drawImage(img, left, top, width, height);\n                  };\n                }\n              },\n            },\n          ],\n        });\n      });\n  \n      return {\n        scatterChart,\n      };\n    },\n  });\n  </script>\n\n<style scoped>\nh3 {\n  text-align: left; \n  font-size: 15px;\n  color: black;\n}\n\np{\n  font-size: 12px;\n}\n.manual-legend .legend-text {\n  font-size: 12pt;\n\n  font-style: \"Inter\";\n}\n</style>\n\n\n"],"mappings":"AAsBE,SAASA,eAAe,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AACrD,SAASC,KAAK,EAAEC,aAAY,QAAS,UAAU;AAE/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAEhC,eAAeJ,eAAe,CAAC;EAC7BM,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,YAAW,GAAIX,GAAG,CAAC,IAAI,CAAC;IAE9BD,SAAS,CAAC,MAAM;MACd,MAAMa,GAAE,GAAID,YAAY,CAACE,KAAK,EAAEC,UAAU,CAAC,IAAI,CAAC;MAChD,IAAI,CAACF,GAAG,EAAE;QACRG,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;QAC9C;MACF;MAEA,IAAIf,KAAK,CAACW,GAAG,EAAE;QACbL,IAAI,EAAE,SAAS;QACfD,IAAI,EAAE;UACJW,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,cAAc;YACrBZ,IAAI,EAAED,KAAK,CAACC,IAAI;YAChBa,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE;YACPC,MAAM,EAAE;cACNC,OAAO,EAAE;YACX;UACF,CAAC;UACDC,MAAM,EAAE;YACRC,CAAC,EAAE;cACDlB,IAAI,EAAE,QAAQ;cACdmB,QAAQ,EAAE,QAAQ;cAClBC,KAAK,EAAE;gBACLJ,OAAO,EAAE,IAAI;gBACbK,IAAI,EAAE,YAAY;gBAClBC,IAAI,EAAE;kBACJC,IAAI,EAAE,EAAE;kBACRC,MAAM,EAAE;gBACV;cACF,CAAC;cACDC,GAAG,EAAE,CAAC;cACNC,GAAG,EAAE,GAAG;cACRC,QAAQ,EAAE;YACZ,CAAC;YACDC,CAAC,EAAE;cACDR,KAAK,EAAE;gBACLJ,OAAO,EAAE,IAAI;gBACbK,IAAI,EAAE,mBAAmB;gBACzBC,IAAI,EAAE;kBACJC,IAAI,EAAE,EAAE;kBACRC,MAAM,EAAE;gBACV;cACF,CAAC;cACDC,GAAG,EAAE,CAAC;cACNC,GAAG,EAAE,GAAG;cACRC,QAAQ,EAAE;YACZ;UACF,CAAC;UACDZ,MAAM,EAAE;YACNC,OAAO,EAAE;UACX;QACA,CAAC;QACDF,OAAO,EAAE,CACP;UACEe,EAAE,EAAE,iBAAiB;UACrBC,UAAU,EAAGC,KAAK,IAAK;YACrB,IAAIA,KAAK,EAAEC,SAAS,EAAE;cACtB,MAAM3B,GAAE,GAAI0B,KAAK,CAAC1B,GAAG;cACrB,MAAM;gBAAE4B,GAAG;gBAAEC,IAAI;gBAAEC,KAAK;gBAAEC;cAAO,IAAIL,KAAK,CAACC,SAAS;cAEpD,MAAMK,GAAE,GAAI,IAAIC,KAAK,CAAC,CAAC;cACvBD,GAAG,CAACE,GAAE,GAAIC,OAAO,CAAC,gDAAgD,CAAC;cACnEH,GAAG,CAACI,MAAK,GAAI,MAAM;gBACjBpC,GAAG,CAACqC,SAAS,CAACL,GAAG,EAAEH,IAAI,EAAED,GAAG,EAAEE,KAAK,EAAEC,MAAM,CAAC;cAC5C,CAAC;YACH;UACF;QACF,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO;MACLhC;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}